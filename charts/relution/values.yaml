replicaCount: 1

image:
  repository: relution/relution
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

hostAliases: []

terminationGracePeriodSeconds: 30

service:
  type: ClusterIP
  port: 80
  annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

ingressRoute:
  enabled: false
  annotations: {}
  entryPoints:
    - web
    - websecure
  defaultRoute:
    enabled: true
    match: ""
    host: ""
    middlewares: []
    #  - name: ""
    #    namespace: ""
  additionalRoutes: []
  #  - kind: Rule
  #    match: ""
  #    middlewares: []
  #    #  - name: ""
  #    #    namespace: ""
  tls:
    enabled: false
    generateCertificate: false
    secretName: ""
    certResolver: ""
    domains: []
    #  - main: ""
    #    sans:
    #      - ""
    issuerRef:
      kind: ClusterIssuer
      name: ""

startupProbe:
  enabled: true
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 30

readinessProbe:
  enabled: true
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3

livenessProbe:
  enabled: true
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

relution:
  config: {}
  environment: {}
  secrets: {}
  # - name: VARIABLE_NAME
  #   value: VARIABLE_VALUE
  existingSecretRefs: []
  preRunScript: null

additionalInitContainers: []
additionalSidecarContainers: []

additionalVolumes: []
additionalVolumeMounts: []

imageMagick:
  enabled: true
  domains:
    resource:
      - name: "thread"
        value: 2
      - name: "time"
        value: 30
      - name: "file"
        value: 768
      - name: "memory"
        value: 128MiB
      - name: "map"
        value: 256MiB
      - name: "area"
        value: 16KP
      - name: "disk"
        value: 512MiB
      - name: "list-length"
        value: 16
      - name: "width"
        value: 8KP
      - name: "height"
        value: 8KP
      - name: "throttle"
        value: 2
    system:
      - name: "shred"
        value: 1
      - name: "max-memory-request"
        value: 256MiB
    delegate:
      - rights: none
        pattern: "*"
    filter:
      - rights: none
        pattern: "*"
    path:
      - rights: none
        pattern: "/etc/*"
      - rights: none
        pattern: "@*"
    module:
      - rights: none
        pattern: "{MSL,MVG,PS,SVG,URL,XPS}"
      - rights: none
        pattern: "*"
      - rights: read | write
        pattern: "{GIF,JPEG,JPG,PNG,WEBP,RGB,RGBA,CAPTION,CANVAS}"
    coder:
      - rights: none
        pattern: "*"
      - rights: read | write
        pattern: "{GIF,JPEG,JPG,PNG,WEBP,RGB,RGBA,CAPTION,CANVAS}"

# The heap dump exporter sidecar is intended to be used for debugging. It will monitor the /opt/relution/log directory (customizable) and copy new files to a S3 bucket so they can be further inspected by our development team.
heapDumpExporter:
  enabled: false
  image:
    repository: amazon/aws-cli
    pullPolicy: IfNotPresent
    tag: "2.9.13"
  directory: /opt/relution/log
  s3:
    endpointUrl: https://s3.eu-central-1.amazonaws.com
    bucket: ""
    awsAccessKeyId: ""
    awsSecretAccessKey: ""
  persistence:
    enabled: false
    size: 10Gi
    storageClass: ""

# MariaDB is provided as a dependency to enable quick debugging. We recommend deploying Relution on a dedicated database cluster.
mariadb:
  enabled: false
  image:
    repository: bitnamilegacy/mariadb
  auth:
    # Please change these passwords before deploying Relution.
    rootPassword: root
    username: relution
    password: relution
    database: relution

networkPolicy:
  enabled: false
  spec: {}

s2s:
  enabled: false
  image:
    repository: ubuntu
    pullPolicy: IfNotPresent
    tag: "24.04"
  packages:
    # renovate: suite=noble depName=strongswan
    strongswan: "5.9.13-2ubuntu4"
    # renovate: suite=noble depName=iptables
    iptables: "1.8.10-3ubuntu2"
  livenessProbe:
    enabled: true
  psk: ""
  ike:
    proposals: sha512-aes256-ecp384
  ipsec:
    proposals: chacha20poly1305-ecp384
  remote:
    ip: ""
    subnets: []
  local:
    nat: ""
    transferSubnet: ""
