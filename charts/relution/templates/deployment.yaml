apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "relution.fullname" . }}
  labels:
    {{- include "relution.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "relution.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.relution.config }}
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.relution.environment }}
        checksum/environment: {{ include (print $.Template.BasePath "/environment.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.relution.secrets }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- end }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8099"
        prometheus.io/path: "/actuator/prometheus"
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "relution.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "relution.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.hostAliases }}
      hostAliases:
        {{- toYaml .Values.hostAliases | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | required "Please specify which Relution version you want to use by setting image.tag to the appropriate tag." }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or (or .Values.relution.config .Values.heapDumpExporter.enabled) .Values.additionalVolumeMounts }}
          volumeMounts:
          {{- if .Values.relution.config }}
            - name: config
              mountPath: /opt/relution/application.yml
              subPath: application.yml
          {{- end }}
          {{- if .Values.heapDumpExporter.enabled }}
            - name: heap-dumps
              mountPath: {{ .Values.heapDumpExporter.directory }}
          {{- end }}
          {{- if .Values.additionalVolumeMounts }}
            {{- toYaml .Values.additionalVolumeMounts | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if or .Values.relution.environment .Values.relution.secrets }}
          envFrom:
            {{- if .Values.relution.environment }}
            - configMapRef:
                name: {{ include "relution.fullname" . }}-environment
            {{- end }}
            {{- if .Values.relution.secrets }}
            - secretRef:
                name: {{ include "relution.fullname" . }}-secrets
            {{- end }}
          {{- end }}
          {{- if .Values.relution.existingSecretRefs }}
          env:
            {{- toYaml .Values.relution.existingSecretRefs | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: monitoring
              containerPort: 8099
              protocol: TCP
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /actuator/health
              port: monitoring
            failureThreshold: {{ .Values.startupProbe.failureThreshold | default 30 }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds | default 10 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: monitoring
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: monitoring
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.heapDumpExporter.enabled }}
        - name: heap-dump-exporter
          image: "{{ .Values.heapDumpExporter.image.repository }}:{{ .Values.heapDumpExporter.image.tag }}"
          imagePullPolicy: {{ .Values.heapDumpExporter.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
          - |
            amazon-linux-extras install -y epel &&
            yum install -y inotify-tools &&
            echo "Listening for changes in directory '{{ .Values.heapDumpExporter.directory }}'..." &&
            inotifywait -m {{ .Values.heapDumpExporter.directory }} -e close_write | while read path action file; do aws s3 --endpoint-url {{ .Values.heapDumpExporter.s3.endpointUrl }} cp "$path$file" "s3://{{ required "heapDumpExporter.s3.bucket is required!" .Values.heapDumpExporter.s3.bucket }}/{{ include "relution.fullname" . }}/$file"; done;
          env:
            - name: "AWS_ACCESS_KEY_ID"
              value: {{ required "heapDumpExporter.s3.awsAccessKeyId is required!" .Values.heapDumpExporter.s3.awsAccessKeyId }}
            - name: "AWS_SECRET_ACCESS_KEY"
              value: {{ required "heapDumpExporter.s3.awsSecretAccessKey is required!" .Values.heapDumpExporter.s3.awsSecretAccessKey }}
          volumeMounts:
            - name: heap-dumps
              mountPath: {{ .Values.heapDumpExporter.directory }}
        {{- end }}
      {{- if or (or .Values.relution.config .Values.heapDumpExporter.enabled) .Values.additionalVolumes }}
      volumes:
      {{- if .Values.relution.config }}
        - name: config
          configMap:
            name: {{ include "relution.fullname" . }}-config
      {{- end }}
      {{- if .Values.heapDumpExporter.enabled }}
        - name: heap-dumps
          persistentVolumeClaim:
            claimName: {{ include "relution.fullname" . }}-heap-dump-exporter
      {{- end }}
      {{- if .Values.additionalVolumes }}
        {{- toYaml .Values.additionalVolumes | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
