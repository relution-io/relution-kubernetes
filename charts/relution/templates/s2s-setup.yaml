{{- if .Values.s2s.enabled }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "relution.fullname" . }}-s2s-setup
  labels:
    {{- include "relution.labels" . | nindent 4 }}
data:
  entrypoint.sh: |
    #!/bin/bash -e
    apt-get update && apt-get install -y \
      strongswan=5.9.13-2ubuntu4 \
      strongswan-swanctl=5.9.13-2ubuntu4 \
      iptables=1.8.10-3ubuntu2;

    {{- range .Values.s2s.remote.subnets }}
    iptables -C POSTROUTING -t nat -d {{ . }} -j SNAT --to-source {{ required "s2s.local.nat is required."  $.Values.s2s.local.nat }} || \
    iptables -A POSTROUTING -t nat -d {{ . }} -j SNAT --to-source {{ required "s2s.local.nat is required."  $.Values.s2s.local.nat }};
    {{- end }}

    /usr/lib/ipsec/charon;
  autoload.conf: |
    charon {
      start-scripts {
        autoload = /tmp/autoload.sh
      }
    }
  autoload.sh: |
    #!/bin/bash -e
    swanctl --load-all;
  health.sh: |
    #!/bin/bash -e
    OUTPUT=$(swanctl --list-sas 2>/dev/null)

    if [[ -z "$OUTPUT" ]]; then
      echo "CRITICAL: No IKE SAs found (swanctl returned nothing)."
      exit 1
    fi

    # Check for an established IKE SA
    if ! grep -q "ESTABLISHED" <<< "$OUTPUT"; then
      echo "CRITICAL: No established IKE SA found."
      exit 1
    fi

    # Check for an installed ESP SA
    if ! grep -q "INSTALLED" <<< "$OUTPUT"; then
      echo "CRITICAL: No installed ESP SA found."
      exit 1
    fi

    echo "OK: Tunnel is established."
    exit 0
{{- end }}
