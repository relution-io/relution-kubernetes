ingress:
  enabled: true
  hosts:
    - host: "test.relution.io"
      paths:
        - path: /
          pathType: ImplementationSpecific

ingressRoute:
  enabled: true
  entryPoints:
    - websecure
  defaultRoute:
    host: "test.relution.io"
    match: "Host(`test.relution.io`) || Host(`test-2.relution.io`)"
    middlewares:
      - name: test
        namespace: test
  additionalRoutes:
    - kind: Rule
      match: "Host(`{{ .Values.ingressRoute.defaultRoute.host }}`) && Path(`test`)"
      middlewares:
        - name: test
          namespace: test
  tls:
    enabled: true
    generateCertificate: true
    secretName: test-relution-io
    certResolver: default
    domains:
      - main: test.relution.io
        sans:
          - test-2.relution.io
      - main: test-3.relution.io
        sans:
          - test-4.relution.io
    issuerRef:
      kind: ClusterIssuer
      name: "letsencrypt"

relution:
  preRunScript: |
    #!/bin/bash
    echo "Prerun script ran." > /tmp/prerun.txt
  config:
    relution:
      database:
        type: mariadb
        url: jdbc:mariadb://mariadb:3306/relution
        username: relution
        password: relution
  environment:
    RELUTION_SERVER_EXTERNALURL: https://test.relution.io
    RELUTION_DATABASE_TYPE: mariadb
    RELUTION_DATABASE_URL: jdbc:mariadb://mariadb:3306/relution
    RELUTION_DATABASE_USERNAME: relution
  secrets:
    RELUTION_DATABASE_PASSWORD: relution
  existingSecretRefs:
    - name: TEST_SECRET
      value: SOME_SECRET

readinessProbe:
  timeoutSeconds: 30

livenessProbe:
  timeoutSeconds: 30

autoscaling:
  enabled: true

heapDumpExporter:
  enabled: true
  persistence:
    enabled: true
  s3:
    bucket: s3://test-relution-io
    awsAccessKeyId: relution
    awsSecretAccessKey: relution

mariadb:
  enabled: true
  fullnameOverride: mariadb
  auth:
    rootPassword: relution
    username: relution
    password: relution
    database: relution

networkPolicy:
  enabled: true
  spec:
    policyTypes:
      - Ingress
      - Egress
    ingress:
      - from:
          - ipBlock:
              cidr: "0.0.0.0/0"
    egress:
      - to:
          - ipBlock:
              cidr: "0.0.0.0/0"
